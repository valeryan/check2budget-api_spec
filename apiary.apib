FORMAT: 1A
HOST: http://check2budget.apiblueprint.org/

# check2budget

Check 2 Budget is an api for handling simple household budgets
## Group Banks

Resources related to banks in the API.

## Banks Collection [/banks]

A Bank object has the following attributes:

+ id
+ name
+ description
+ schedule
+ created_by

### Retrieve all Banks [GET]

+ Response 200 (application/json)

    + Body

            {
                "errors": false,
                "banks" : [
                    {
                        "id" : 1,
                        "name": "test bank",
                        "description" : "something about this bank",
                        "schedule" :[
                            {
                                "id" : 1,
                                "name" : "Every 2 Weeks"
                            }
                        ],
                        "created_by" :[
                            {
                                "id" : 1,
                                "name" : "Samuel Hilson",
                                "username" : "Samuel"
                            }
                        ]
                    },
                    {
                        "id" : 1,
                        "name": "test bank",
                        "description" : "something about this bank",
                        "schedule" :[
                            {
                                "id" : 1,
                                "name" : "Every 2 Weeks"
                            }
                        ],
                        "created_by" :[
                            {
                                "id" : 1,
                                "name" : "Samuel Hilson",
                                "username" : "Samuel"
                            }
                        ]
                    }
                ]
            }

### Create a Bank [POST]

+ Request (application/json)

    + Body

            {
                "name": "test bank",
                "description": "something about this bank",
                "schedule" : 1,
                "_token": "generated-token"
            }

+ Response 200 (application/json)

    + Body

            {
                "errors": false,
                "details": "You have successfully created a bank!"
            }

## Bank [/banks/{id}]

+ Parameters
    + id (required, number, `1`) ... ID of the Bank in form of an integer

### Retrieve a bank [GET]

+ Response 200 (application/json)

    + Body

            {
                "errors" : false,
                "banks" : [
                    {
                        "id" : 1,
                        "name": "test bank",
                        "description" : "something about this bank",
                        "schedule" :[
                            {
                                "id" : 1,
                                "name" : "Every 2 Weeks"
                            }
                        ],
                        "created_by" :[
                            {
                                "id" : 1,
                                "name" : "Samuel Hilson",
                                "username" : "Samuel"
                            }
                        ]
                    }
                ]
            }

### Edit a Bank [POST]

+ Request (application/json)

    + Body

            {
                "name": "test bank",
                "description": "something about this bank",
                "schedule" : 1,
                "_token": "generated-token"
            }

+ Response 200 (application/json)

    + Body

            {
                "errors": false,
                "details": "You have successfully edited a bank!"
            }

### Delete a Bank [DELETE]

+ Response 200 (application/json)

        {
            "errors" : false,
            "details" : "You have successfully deleted a bank!"
        }


## Banks By User [/banks/user/{id}]

+ Parameters
    + id (required, number, `1`) ... id of the User in form of an integer

### Retrieve banks by user [GET]

+ Response 200 (application/json)

    + Body

            {
                "errors" : false,
                "banks" : [
                    {
                        "id" : 1,
                        "name": "test bank",
                        "description" : "something about this bank",
                        "schedule" :[
                            {
                                "id" : 1,
                                "name" : "Every 2 Weeks"
                            }
                        ],
                        "created_by" :[
                            {
                                "id" : 1,
                                "name" : "Samuel Hilson",
                                "username" : "Samuel"
                            }
                        ]
                    },
                    {
                        "id" : 1,
                        "name": "test bank",
                        "description" : "something about this bank",
                        "schedule" :[
                            {
                                "id" : 1,
                                "name" : "Every 2 Weeks"
                            }
                        ],
                        "created_by" :[
                            {
                                "id" : 1,
                                "name" : "Samuel Hilson",
                                "username" : "Samuel"
                            }
                        ]
                    }
                ]
            }


## Group User

Resources related to users in the API.

## User Collection [/users]

A User object has the following attributes:

+ id
+ username
+ last_name
+ first_name
+ email
+ active
+ role


### Retrieve all Users [GET]

+ Response 200 (application/json)

    + Body

            {
                "errors": false,
                "users" : [
                    {
                        "id" : 1,
                        "username" : "samuel",
                        "last_name" : "Hilson",
                        "first_name" : "Samuel",
                        "email" : "samrhilson@gmail.com",
                        "active" : 1,
                        "role" : 1
                    }
                ]
            }

### Create a User [POST]

+ Request (application/json)

    + Body

            {
                "username" : "samuel",
                "last_name" : "Hilson",
                "first_name" : "Samuel",
                "email" : "samrhilson@gmail.com",
                "password" : "password",
                "_token": "generated-token"
            }

+ Response 200 (application/json)

    + Body

            {
                "errors": false,
                "details": "You have successfully registered!"
            }

